[push]
        default = simple
[include]
    path = .gitconfig.local
[core]
    excludesfile = ~/.gitignore
    autocrlf = input
    precomposeunicode = true
    editor = /usr/local/bin/vim
    pager = diff-so-fancy | less --tabs=1,5 -R
[color]
    ui = auto
[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = red bold 52
        newNormal = green bold
        newHighlight = green bold 22
[color "branch"]
    current = red
    local = yellow
    remote = green
[color "diff"]
    meta = cyan
    frag = magenta
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[alias]
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
    mylog = log --pretty=format:'%h %s [%an]' --graph


    ci = commit
    co = checkout
    br = branch
    today = diff @{yesterday}.. --stat
    wdiff = diff --word-diff=color
    wshow = show --word-diff=color
    branches = branch -vv

    slog = log --pretty=format:"%C(auto,yellow)%h%C(auto)%d\\ %C(auto,reset)%s\\ \\ [%C(auto,blue)%cn%C(auto,reset),\\ %C(auto,cyan)%ar%C(auto,reset)]"
    glog = log --graph --pretty=format:"%C(auto,yellow)%h%C(auto)%d\\ %C(auto,reset)%s\\ \\ [%C(auto,blue)%cn%C(auto,reset),\\ %C(auto,cyan)%ar%C(auto,reset)]"
    gflog = log -p --cc --graph --decorate
    wtf = log --pretty=format:"%C(auto,yellow)%h%C(auto)%d%C(auto,reset)\\ by\\ %C(auto,blue)%cn%C(auto,reset),\\ %C(auto,cyan)%ar%C(auto,reset)%n\\ %s%n" --stat
    unci = reset HEAD^
    uncommit = reset HEAD^
    ls = ls-files
        rup = !git remote update `git rev-parse --symbolic-full-name HEAD@{u}|cut -d/ -f3`
    in = !git wtf HEAD..HEAD@{u}
    out = !git wtf HEAD@{u}..HEAD

    sync = !git pull --rebase && git push
    down = "!git remote update; git pull --ff-only"

    ours = "!f() { git checkout --ours -- $@ && git add -- $@; }; f"
    theirs = "!f() { git checkout --theirs -- $@ && git add -- $@; }; f"
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    authors = shortlog -sn
    serve = daemon --verbose --export-all --base-path=.git --reuseaddr --strict-paths .git/
    serveall = daemon --verbose --export-all --base-path=. --reuseaddr .
    addpr = "!f() { git fetch origin pull/$1/head:pr/$1; }; f"

[diff]
    algorithm = patience
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
